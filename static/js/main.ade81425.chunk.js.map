{"version":3,"sources":["redux/actionType.js","api/trasformDataForTopBar.js","api/infoBarTransform.js","redux/reducer/reducer.js","redux/reducer/rootReducer.js","api/apiWeather.js","redux/actions.js","components/top-bar/find.js","showTemperature/infoBar/miniInfo.js","showTemperature/infoBar/underBar.js","showTemperature/infoBar/mainInfo.js","showTemperature/infoBar/infoBar.js","showTemperature/topBar/miniCard.js","showTemperature/topBar/topBar.js","showTemperature/mainWidget.js","components/backgr-img/spring.jpg","App.js","reportWebVitals.js","index.js"],"names":["LOAD_DATA","INPUT_CITY","PAGE_SET","FIND_DAY","SHOW_ERR","transformDataForTopBar","oneCallData","daily","map","num","numDay","dateDay","today","Date","setDate","getDate","getNewDay","nameDay","getDay","nameMonth","date","getMonth","getSuitableMonth","tempAllDays","filter","el","dt","minTemp","Math","floor","temp","min","maxTemp","max","id","uuidv4","day","month","img","weather","icon","tMin","tMax","infoDetailsArr","fiveDaysData","arrOneCall","list","allTimeForDay","allDateTemp","timeTransform","setMilliseconds","info","time","getHours","getInfoDay","findHours","hours","element","undefined","ifEmptyArr","param","length","main","humidity","partOfTheDay","twoTimes","getNewData","numDayGet","allTimeForDayArr","tempAllDayOneCall","allDayTemp","yearNum","getFullYear","toString","substr","monthNum","dayNum","dayName","todayTemp","likeTemp","feels_like","wind","wind_deg","speedWind","wind_speed","pressure","tempArr","initialState","allDataObjTwo","findCity","arrTop","arrTemp","detailsArr","page","detailsDay","showErrFind","store","createStore","state","action","type","valueShow","city","data","console","log","dayF","find","applyMiddleware","thunk","key","defaultNameCity","ApiWeather","a","axios","get","dataCall5Day","coord","lat","lon","dataOneCall","pageSet","loadDataAction","Find","useState","cityName","setCityName","cityNameSelector","setCityNameSelector","cityShow","useSelector","stateShow","setStateShow","showErr","dispatch","useDispatch","getData","api","thunkSetInsertedCity","useEffect","className","onChange","e","target","value","onKeyPress","placeholder","onClick","style","fontSize","color","MiniInfo","src","UnderBar","renderArrPartsDay","arrDayParts","backgroundColor","borderRadius","border","marginRight","height","MainInfo","todayT","setTodayT","fLike","setFLike","InfoBar","history","useHistory","infState","setInfState","useParams","detailDay","pageDay","push","MiniCard","setMin","setMax","putSign","setTemp","to","textDecoration","activeStyle","TopBar","firstLoadThunk","cardRender","MainWidget","infBarShow","setInfBarShow","path","exact","component","App","basename","backgroundImage","InnerBgImg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ade81425.chunk.js","sourcesContent":["export const LOAD_DATA = \"LOAD_DATA\";\r\nexport const INPUT_CITY = \"INPUT_CITY\";\r\nexport const PAGE_SET = \"PAGE_SET\";\r\nexport const FIND_DAY = \"FIND_DAY\";\r\nexport const SHOW_ERR = \"SHOW_ERR\";\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nexport default function transformDataForTopBar(oneCallData) {\r\n  const { daily } = oneCallData;\r\n\r\n  const arrCountDays = [0, 1, 2, 3, 4];\r\n  const getDayWeek = (date) => {\r\n    const DayName = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    return DayName[date.getDay()];\r\n  };\r\n\r\n  const getSuitableMonth = (date) => {\r\n    const monthName = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    return monthName[date.getMonth()];\r\n  };\r\n\r\n  const getNewDay = (num) => {\r\n    let today = new Date();\r\n    return new Date(today.setDate(today.getDate() + num));\r\n  };\r\n\r\n  const allDayTemp = (numDay) => {\r\n    return daily.filter((el) => {\r\n      let dataReturn = new Date(el.dt * 1000);\r\n      return dataReturn.getDate() === numDay;\r\n    });\r\n  };\r\n  return arrCountDays.map((num) => {\r\n    //текущий день\r\n    const dateDay = getNewDay(num);\r\n    const nameDay = getDayWeek(dateDay);\r\n\r\n    const nameMonth = getSuitableMonth(dateDay);\r\n\r\n    let tempAllDays = allDayTemp(dateDay.getDate());\r\n    let minTemp = Math.floor(tempAllDays[0].temp.min - 273);\r\n    let maxTemp = Math.floor(tempAllDays[0].temp.max - 273);\r\n\r\n    return {\r\n      id: uuidv4(),\r\n      day: nameDay,\r\n      month: nameMonth,\r\n      dateDay: dateDay.getDate(),\r\n      img: tempAllDays[0].weather[0].icon,\r\n      tMin: minTemp,\r\n      tMax: maxTemp,\r\n    };\r\n  });\r\n}\r\n\r\n// &#176\r\n// &deg\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nexport default function infoDetailsArr(fiveDaysData, arrOneCall) {\r\n  const { list } = fiveDaysData;\r\n  const arrCountDays = [0, 1, 2, 3, 4];\r\n  const getNewData = (num) => {\r\n    let today = new Date();\r\n    return new Date(today.setDate(today.getDate() + num));\r\n  };\r\n  const getDayWeek = (date) => {\r\n    const DayName = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    return DayName[date.getDay()];\r\n  };\r\n  const allDayTemp = (num) => {\r\n    return arrOneCall.daily.filter((el) => {\r\n      let dataReturn = new Date(el.dt * 1000);\r\n      return dataReturn.getDate() === num;\r\n    });\r\n  };\r\n  const allTimeForDay = (num) => {\r\n    function getInfoDay(el, numDay) {\r\n      let timeTransform = new Date(el.dt * 1000);\r\n      timeTransform.setMilliseconds(-3 * 60 * 60 * 1000);\r\n      if (timeTransform.getDate() === numDay) {\r\n        return {\r\n          info: el,\r\n          time: timeTransform.getHours(),\r\n        };\r\n      }\r\n    }\r\n\r\n    const allDateTemp = list.map((el) => {\r\n      return getInfoDay(el, num);\r\n    });\r\n    const findHours = (hours) => {\r\n      const data = allDateTemp.filter(function (element) {\r\n        return element !== undefined;\r\n      });\r\n      return data.filter(({ info, time }) => {\r\n        if (time === hours) {\r\n          return info;\r\n        }\r\n      });\r\n    };\r\n    const ifEmptyArr = (hours, param) => {\r\n      switch (param) {\r\n        case \"img\":\r\n          return findHours(hours).length < 1\r\n            ? false\r\n            : findHours(hours)[0].info.weather[0].icon;\r\n          break;\r\n        case \"temp\":\r\n          return findHours(hours).length < 1\r\n            ? \"--\"\r\n            : Math.floor(findHours(hours)[0].info.main.temp - 273);\r\n          break;\r\n        default:\r\n          return findHours(hours).length < 1\r\n            ? \"--\"\r\n            : findHours(hours)[0].info.main.humidity;\r\n          break;\r\n      }\r\n    };\r\n    return [\r\n      {\r\n        id: uuidv4(),\r\n        partOfTheDay: \"night\",\r\n        twoTimes: [\r\n          {\r\n            id: uuidv4(),\r\n            time: \"00:00\",\r\n            img: ifEmptyArr(0, \"img\"),\r\n            temp: ifEmptyArr(0, \"temp\"),\r\n            humidity: ifEmptyArr(0, \"humidity\"),\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            time: \"03:00\",\r\n            img: ifEmptyArr(3, \"img\"),\r\n            temp: ifEmptyArr(3, \"temp\"),\r\n            humidity: ifEmptyArr(3, \"humidity\"),\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        partOfTheDay: \"morning\",\r\n        twoTimes: [\r\n          {\r\n            id: uuidv4(),\r\n            time: \"06:00\",\r\n            img: ifEmptyArr(6, \"img\"),\r\n            temp: ifEmptyArr(6, \"temp\"),\r\n            humidity: ifEmptyArr(6, \"humidity\"),\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            time: \"09:00\",\r\n            img: ifEmptyArr(9, \"img\"),\r\n            temp: ifEmptyArr(9, \"temp\"),\r\n            humidity: ifEmptyArr(9, \"humidity\"),\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        partOfTheDay: \"day\",\r\n        twoTimes: [\r\n          {\r\n            id: uuidv4(),\r\n            time: \"12:00\",\r\n            img: ifEmptyArr(12, \"img\"),\r\n            temp: ifEmptyArr(12, \"temp\"),\r\n            humidity: ifEmptyArr(12, \"humidity\"),\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            time: \"15:00\",\r\n            img: ifEmptyArr(15, \"img\"),\r\n            temp: ifEmptyArr(15, \"temp\"),\r\n            humidity: ifEmptyArr(15, \"humidity\"),\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        partOfTheDay: \"evening\",\r\n        twoTimes: [\r\n          {\r\n            id: uuidv4(),\r\n            time: \"18:00\",\r\n            img: ifEmptyArr(18, \"img\"),\r\n            temp: ifEmptyArr(18, \"temp\"),\r\n            humidity: ifEmptyArr(18, \"humidity\"),\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            time: \"21:00\",\r\n            img: ifEmptyArr(21, \"img\"),\r\n            temp: ifEmptyArr(21, \"temp\"),\r\n            humidity: ifEmptyArr(21, \"humidity\"),\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n  };\r\n  return arrCountDays.map((num) => {\r\n    // today all inf\r\n    const dateDay = getNewData(num);\r\n    // number day\r\n    const numDayGet = dateDay.getDate();\r\n    // name day\r\n    const nameDay = getDayWeek(dateDay);\r\n    //array with temp all day\r\n    const allTimeForDayArr = allTimeForDay(numDayGet);\r\n    // oneCall\r\n    const tempAllDayOneCall = allDayTemp(numDayGet)[0];\r\n    return {\r\n      id: uuidv4(),\r\n      yearNum: dateDay.getFullYear().toString().substr(-2),\r\n      monthNum: dateDay.getMonth() + 1,\r\n      dayNum: numDayGet,\r\n      dayName: nameDay,\r\n      img: tempAllDayOneCall.weather[0].icon,\r\n      todayTemp: Math.floor(tempAllDayOneCall.temp.day - 273),\r\n      likeTemp: Math.floor(tempAllDayOneCall.feels_like.day - 273),\r\n      wind: tempAllDayOneCall.wind_deg,\r\n      speedWind: tempAllDayOneCall.wind_speed,\r\n      humidity: tempAllDayOneCall.humidity,\r\n      pressure: tempAllDayOneCall.pressure,\r\n      //array with temp all day\r\n      tempArr: allTimeForDayArr,\r\n    };\r\n  });\r\n}\r\n","import {\r\n  INPUT_CITY,\r\n  LOAD_DATA,\r\n  PAGE_SET,\r\n  FIND_DAY,\r\n  SHOW_ERR,\r\n} from \"./../actionType\";\r\nimport transformDataForTopBar from \"./../../api/trasformDataForTopBar\";\r\nimport infoDetailsArr from \"./../../api/infoBarTransform\";\r\n\r\nconst initialState = {\r\n  allDataObjTwo: {},\r\n  findCity: \"Киев\",\r\n  arrTop: [\r\n    {\r\n      day: \"monday\",\r\n      dateDay: 14,\r\n      month: \"april\",\r\n      img: \"04d\",\r\n      tMin: \"+5\",\r\n      tMax: \"+10\",\r\n    },\r\n  ],\r\n  arrTemp: [\r\n    {\r\n      time: \"00:00\",\r\n      img: \"04d\",\r\n      temp: \"5\",\r\n      humidity: \"9\",\r\n    },\r\n  ],\r\n  detailsArr: null,\r\n  page: null,\r\n  detailsDay: null,\r\n  showErrFind: false,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOW_ERR:\r\n      return {\r\n        ...state,\r\n        showErrFind: action.valueShow,\r\n      };\r\n      break;\r\n    case INPUT_CITY:\r\n      return {\r\n        ...state,\r\n        findCity: action.city,\r\n      };\r\n      break;\r\n\r\n    case LOAD_DATA:\r\n      const { fiveDaysData, oneCallData } = action.data;\r\n      if (fiveDaysData === 404) {\r\n        console.log(\"такого города не найдено\");\r\n        return {\r\n          ...state,\r\n          showErrFind: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          allDataObjTwo: action.data,\r\n          arrTop: transformDataForTopBar(oneCallData),\r\n          detailsArr: infoDetailsArr(fiveDaysData, oneCallData),\r\n          showErrFind: false,\r\n        };\r\n      }\r\n\r\n      break;\r\n    case PAGE_SET:\r\n      return {\r\n        ...state,\r\n        page: action.page,\r\n      };\r\n    case FIND_DAY: {\r\n      const page = action.page;\r\n\r\n      const dayF = state.detailsArr.find(({ dayNum }) => +page === +dayNum);\r\n      console.log(page);\r\n      return {\r\n        ...state,\r\n        detailsDay: dayF,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\nexport default store;\r\n","import axios from \"axios\";\r\nconst key = \"f553d313edd0d50254f7ee1ba1440fe5\";\r\nconst defaultNameCity = \"Kyiv\";\r\nconst ApiWeather = async (city = defaultNameCity) => {\r\n  try {\r\n    const dataCall5Day = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${key}`\r\n    );\r\n    const coord = await dataCall5Day.data.city.coord;\r\n    const dataOneCall = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&exclude={part}&appid=${key}`\r\n    );\r\n    return {\r\n      fiveDaysData: dataCall5Day.data,\r\n      oneCallData: dataOneCall.data,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      fiveDaysData: 404,\r\n      oneCallData: 404,\r\n    };\r\n  }\r\n};\r\n\r\nexport default ApiWeather;\r\n","import {\r\n  INPUT_CITY,\r\n  LOAD_DATA,\r\n  PAGE_SET,\r\n  FIND_DAY,\r\n  SHOW_ERR,\r\n} from \"./actionType\";\r\nimport api from \"./../api/apiWeather\";\r\n\r\nexport const errShow = (value) => {\r\n  return {\r\n    type: SHOW_ERR,\r\n    valueShow: value,\r\n  };\r\n};\r\nexport const inputCity = (city) => {\r\n  return {\r\n    type: INPUT_CITY,\r\n    city,\r\n  };\r\n};\r\nexport const pageSet = (page) => {\r\n  return {\r\n    type: PAGE_SET,\r\n    page,\r\n  };\r\n};\r\nexport const loadDataAction = (data) => {\r\n  return {\r\n    type: LOAD_DATA,\r\n    data,\r\n  };\r\n};\r\nexport const findDay = (page) => {\r\n  return {\r\n    type: FIND_DAY,\r\n    page,\r\n  };\r\n};\r\n\r\nexport const thunkStartLoadData = () => {\r\n  return async (dispatch) => {\r\n    const data = await api();\r\n    dispatch(loadDataAction(data));\r\n  };\r\n};\r\n\r\nexport const thunkSetInsertedCity = (city) => {\r\n  return async (dispatch) => {\r\n    const data = await api(city);\r\n    dispatch(loadDataAction(data));\r\n  };\r\n};\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./find.css\";\r\nimport { inputCity, thunkSetInsertedCity } from \"../../redux/actions\";\r\n\r\nconst Find = () => {\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [cityNameSelector, setCityNameSelector] = useState(\"\");\r\n  const cityShow = useSelector((state) => state.findCity);\r\n  const [stateShow, setStateShow] = useState(false);\r\n  const showErr = useSelector((state) => state.showErrFind);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getData = () => {\r\n    dispatch(inputCity(cityName));\r\n    dispatch(thunkSetInsertedCity(cityName));\r\n  };\r\n\r\n  const getDataOnEnter = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      getData();\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setCityName(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(cityShow);\r\n    setCityNameSelector(cityShow);\r\n  }, [cityShow]);\r\n  useEffect(() => {\r\n    setStateShow(showErr);\r\n  }, [showErr]);\r\n\r\n  return (\r\n    <div className=\"part-for-input\">\r\n      <input\r\n        type=\"search\"\r\n        onChange={handleOnChange}\r\n        onKeyPress={getDataOnEnter}\r\n        value={cityName}\r\n        placeholder=\"Enter the city you are interested in\"\r\n        className=\"input\"\r\n      />\r\n      <button onClick={getData} className=\"button\">\r\n        {\" \"}\r\n        Here we go\r\n      </button>\r\n      <p className={\"cityShow\"} style={{ fontSize: \"2em\", color: \"green\" }}>\r\n        {stateShow ? (\r\n          <>The city {cityNameSelector} doesn't exist</>\r\n        ) : (\r\n          <>{cityNameSelector}</>\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Find;\r\n","import \"./info.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst MiniInfo = ({ time, img, temp, humidity }) => {\r\n  return (\r\n    <div className={\"miniCardBlock\"}>\r\n      <div>\r\n        <p className={\"timeP\"}>time: {time}</p>\r\n      </div>\r\n      <div>\r\n        {img ? (\r\n          <img\r\n            className={\"miniImg\"}\r\n            src={`http://openweathermap.org/img/w/${img}.png`}\r\n          />\r\n        ) : (\r\n          <p> no data </p>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <p className={\"miniTemp\"}> temp: {temp} &deg; </p>\r\n      </div>\r\n      <div>\r\n        <p className={\"miniHum\"}>humidity: {humidity} %</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MiniInfo;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport React, { useEffect } from \"react\";\r\nimport { thunkStartLoadData } from \"./../../redux/actions\";\r\nimport MiniInfo from \"./miniInfo\";\r\nimport \"./info.css\";\r\n\r\nconst UnderBar = ({ arrDayParts }) => {\r\n  const renderArrPartsDay = arrDayParts.map(\r\n    ({ id, partOfTheDay, twoTimes }) => {\r\n      return (\r\n        <div\r\n          key={id}\r\n          style={{\r\n            backgroundColor: \"#87CEFA\",\r\n            borderRadius: \"15px\",\r\n            border: \"1px solid #fff\",\r\n            marginRight: \"4px\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <p className={\"parts\"}>{partOfTheDay}</p>\r\n          {twoTimes.map(({ id, time, img, temp, humidity }) => {\r\n            return (\r\n              <MiniInfo\r\n                key={id}\r\n                time={time}\r\n                img={img}\r\n                temp={temp}\r\n                humidity={humidity}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n  return <div className={\"positionUnderCard\"}>{renderArrPartsDay}</div>;\r\n};\r\nexport default UnderBar;\r\n","import { useEffect, useState } from \"react\";\r\nimport UnderBar from \"./underBar\";\r\nimport \"./info.css\";\r\n\r\nconst MainInfo = ({\r\n  dayNum,\r\n  monthNum,\r\n  yearNum,\r\n  img,\r\n  todayTemp,\r\n  likeTemp,\r\n  speedWind,\r\n  humidity,\r\n  pressure,\r\n  tempArr,\r\n}) => {\r\n  console.log(tempArr);\r\n  const [todayT, setTodayT] = useState(\"\");\r\n  const [fLike, setFLike] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (todayTemp > 0) {\r\n      setTodayT(\"+\");\r\n    } else if (todayTemp < 1) {\r\n      setTodayT(\"\");\r\n    }\r\n    if (likeTemp > 0) {\r\n      setFLike(\"+\");\r\n    } else if (likeTemp < 1) {\r\n      setFLike(\"\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={\"underBlock\"}>\r\n      <div className={\"cardBlock2\"}>\r\n        <div className={\"selectedDate\"}>\r\n          <p className={\"num\"}>{dayNum}</p>\r\n          <p className={\"month\"}>0{monthNum}</p>\r\n          <p>20{yearNum}</p>\r\n        </div>\r\n        <div>\r\n          <img\r\n            className={\"img\"}\r\n            src={`http://openweathermap.org/img/w/${img}.png`}\r\n          />\r\n        </div>\r\n        <div>\r\n          <p className={\"tempToday\"}>\r\n            {\" \"}\r\n            temp: {todayT}\r\n            {todayTemp} &deg;\r\n          </p>\r\n        </div>\r\n\r\n        <div>\r\n          <p>\r\n            {\" \"}\r\n            feels like: {fLike}\r\n            {likeTemp} &deg;{\" \"}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p>wind-speed: {speedWind} m/s</p>\r\n        </div>\r\n        <div>\r\n          <p>humidity: {humidity} %</p>\r\n        </div>\r\n        <div>\r\n          <p>pressure: {pressure} hPa</p>\r\n        </div>\r\n      </div>\r\n      {/* передай сюда массив в underBar */}\r\n      <UnderBar arrDayParts={tempArr} />\r\n    </div>\r\n  );\r\n};\r\nexport default MainInfo;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UnderBar from \"./underBar\";\r\nimport { pageSet, findDay } from \"./../../redux/actions\";\r\nimport \"./info.css\";\r\nimport MainInfo from \"./mainInfo\";\r\n\r\nconst InfoBar = () => {\r\n  const history = useHistory();\r\n  const [infState, setInfState] = useState(false);\r\n  const { numDay } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const detailDay = useSelector((state) => state.detailsDay);\r\n  const pageDay = useSelector((state) => state.page);\r\n\r\n  useEffect(() => {\r\n    if (numDay === undefined) {\r\n      const today = new Date().getDate();\r\n      dispatch(pageSet(today));\r\n      history.push(`/day/${today}`);\r\n    } else {\r\n      dispatch(pageSet(numDay));\r\n    }\r\n  }, [numDay]);\r\n\r\n  useEffect(() => {\r\n    if (pageDay !== null) {\r\n      dispatch(findDay(pageDay));\r\n    }\r\n  }, [pageDay]);\r\n  useEffect(() => {\r\n    if (detailDay === null) {\r\n      setInfState(false);\r\n    } else {\r\n      setInfState(detailDay);\r\n    }\r\n  }, [detailDay]);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        infState ? (\r\n          <MainInfo\r\n            dayNum={infState.dayNum}\r\n            monthNum={infState.monthNum}\r\n            img={infState.img}\r\n            yearNum={infState.yearNum}\r\n            todayTemp={infState.todayTemp}\r\n            likeTemp={infState.likeTemp}\r\n            speedWind={infState.speedWind}\r\n            humidity={infState.humidity}\r\n            pressure={infState.pressure}\r\n            tempArr={infState.tempArr}\r\n          />\r\n        ) : null\r\n        // loader\r\n      }\r\n    </>\r\n  );\r\n};\r\nexport default InfoBar;\r\n\r\n","import \"./card.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MiniCard = ({ day, dateDay, month, img, tMin, tMax }) => {\r\n  const [min, setMin] = useState(\"\");\r\n  const [max, setMax] = useState(\"\");\r\n\r\n  const putSign = (temp, setTemp) => {\r\n    if (temp > 0) {\r\n      setTemp(\"+\");\r\n    } else if (temp < 1) {\r\n      setTemp(\"\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    putSign(tMin, setMin);\r\n    putSign(tMax, setMax);\r\n  }, [tMin, tMax]);\r\n\r\n  return (\r\n    <NavLink\r\n      to={`/day/${dateDay}`}\r\n      style={{\r\n        textDecoration: \"none\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"17px\",\r\n      }}\r\n      activeStyle={{ backgroundColor: \"#87CEFA\" }}\r\n    >\r\n      <div className={\"cardBlock\"}>\r\n        <div>\r\n          <p>{day}</p>\r\n        </div>\r\n        <div className={\"date\"}>\r\n          <p className={\"dateDay\"}>{dateDay}</p>\r\n          <p className={\"month\"}>{month}</p>\r\n        </div>\r\n        <div>\r\n          <img\r\n            className={\"img\"}\r\n            src={`http://openweathermap.org/img/w/${img}.png`}\r\n          />\r\n        </div>\r\n        <div className={\"temp\"}>\r\n          <p className={\"min\"}>\r\n            {\" \"}\r\n            min: {min} {tMin} &deg;\r\n          </p>\r\n          <p className={\"max\"}>\r\n            {\" \"}\r\n            max: {max} {tMax} &deg;\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\nexport default MiniCard;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport React, { useEffect } from \"react\";\r\nimport { thunkStartLoadData } from \"./../../redux/actions\";\r\nimport MiniCard from \"./miniCard\";\r\nimport \"./card.css\";\r\n\r\nconst TopBar = () => {\r\n  const arrTop = useSelector((state) => state.arrTop);\r\n  const dispatch = useDispatch();\r\n\r\n  const firstLoadThunk = () => {\r\n    dispatch(thunkStartLoadData());\r\n  };\r\n\r\n  useEffect(() => {\r\n    firstLoadThunk();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(arrTop);\r\n  }, [arrTop]);\r\n  // testData\r\n\r\n  const cardRender = arrTop.map(\r\n    ({ id, day, dateDay, month, img, tMin, tMax }) => (\r\n      <MiniCard\r\n        key={id}\r\n        day={day}\r\n        dateDay={dateDay}\r\n        month={month}\r\n        img={img}\r\n        tMin={tMin}\r\n        tMax={tMax}\r\n      />\r\n    )\r\n  );\r\n  return <div className={\"positionTopCard\"}>{cardRender}</div>;\r\n};\r\nexport default TopBar;\r\n","import InfoBar from \"./infoBar/infoBar\";\r\nimport TopBar from \"./topBar/topBar\";\r\nimport { useState, useEffect } from \"react\";\r\n// import UnderBar from \"./infoBar/underBar\"\r\nimport { Route } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { errShow } from \"./../redux/actions\";\r\n\r\nconst MainWidget = () => {\r\n  const [infBarShow, setInfBarShow] = useState(false);\r\n  const [stateShow, setStateShow] = useState(false);\r\n  const detailsArr = useSelector((state) => state.detailsArr);\r\n  const showErr = useSelector((state) => state.showErrFind);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (detailsArr === null) {\r\n      setInfBarShow(false);\r\n    } else {\r\n      setInfBarShow(true);\r\n    }\r\n  }, [detailsArr]);\r\n  useEffect(() => {\r\n    setStateShow(showErr);\r\n  }, [showErr]);\r\n  return (\r\n    <div>\r\n      {stateShow ? null : (\r\n        <>\r\n          <TopBar />{\" \"}\r\n          {infBarShow ? (\r\n            <>\r\n              {\" \"}\r\n              <Route path=\"/\" exact component={InfoBar} />\r\n              <Route path=\"/day/:numDay\" component={InfoBar} />\r\n            </>\r\n          ) : null}\r\n        </>\r\n      )}\r\n\r\n      {/* <UnderBar/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainWidget;\r\n","export default __webpack_public_path__ + \"static/media/spring.16f4b0b3.jpg\";","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/reducer/rootReducer\";\nimport \"./App.css\";\nimport Find from \"./components/top-bar/find\";\nimport MainWidget from \"./showTemperature/mainWidget\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport InnerBgImg from \"./components/backgr-img/spring.jpg\";\n\nconst App = () => {\n  return (\n    <Router basename=\"weather-project/\">\n      <Provider store={store}>\n        <div\n          className=\"backgroung-image\"\n          style={{ backgroundImage: \"url(\" + InnerBgImg + \")\" }}\n        >\n          <Find />\n          <MainWidget />\n        </div>\n      </Provider>\n    </Router>\n  );\n};\n\nexport default App;\n\n// const [todayData, setTodayData] = useState(false);\n// // const [oneCall, setOneCall] = useState(null);\n// const [call5Day, setCall5Day] = useState(false);\n\n// const loadTestData = async () => {\n//   const allData = await api.CurrentWeatherData();\n//   setTodayData(allData.data);\n//   const fiveDayData = await api.Call5DayData();\n//   setCall5Day(fiveDayData.data);\n//   const lat = allData.data.coord.lat;\n//   const lon = allData.data.coord.lon;\n//   const someData = await api.OneCallAPI(lat, lon);\n//   console.log(someData);\n// };\n\n// useEffect(() => {\n//   loadTestData();\n//   console.log(\"loaded 5 day data\", call5Day);\n// }, []);\n\n//////////////////////////////\n\n/* {call5Day ? (\n        <FormForToday\n          date={\"09\"}\n          // temperature={Math.floor(call5DayData.main.temp - 273)}\n          condition={2}\n          wind={1}\n          pressure={2}\n          humidity={1}\n        />\n      ) : null}\n\n      <button onClick={loadTestData}>get test Data</button> */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}